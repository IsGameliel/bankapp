// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String       @id @default(uuid())
  email          String       @unique
  password       String
  name           String?
  accountNumber  String?      @unique
  accountType    AccountType? @default(SAVINGS)
  role           Role         @default(CUSTOMER)
  otp            String?
  otpExpires     DateTime?
  profilePicture String?
  balance        Float        @default(0.0)
  status         UserStatus   @default(ACTIVE)
  createdAt      DateTime     @default(now())

  transactions   Transaction[]
  loans          Loan[]
}

model Transaction {
  id          String       @id @default(uuid())
  amount      Float
  type        TransactionType
  description String?
  status TransactionStatus @default(PENDING)
  createdAt   DateTime     @default(now())

  user        User         @relation(fields: [userId], references: [id])
  userId      String
  metadata    Json?
}

model Loan {
  id              String     @id @default(uuid())
  amount          Float
  purpose         String
  durationMonths  Int
  employmentStatus String
  monthlyIncome   Float
  status          LoanStatus @default(PENDING)
  createdAt       DateTime   @default(now())

  user        User       @relation(fields: [userId], references: [id])
  userId      String
}


enum Role {
  ADMIN
  CUSTOMER
}

enum AccountType {
  SAVINGS
  FIXED
  SALARY
  DEMAT
}

enum TransactionType {
  DEPOSIT
  WITHDRAWAL
  TRANSFER
}

enum LoanStatus {
  PENDING
  APPROVED
  REJECTED
  PAID
}

enum UserStatus {
  ACTIVE
  SUSPENDED
  CLOSED
}

enum TransactionStatus {
  PENDING
  SUCCESS
  FAILED
}
